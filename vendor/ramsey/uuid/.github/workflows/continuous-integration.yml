# GitHub Actions Documentation: https://docs.github.com/en/actions

name: "build"

on: ["pull_request", "push"]

env:
  COMPOSER_ROOT_VERSION: "1.99.99"

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"

      - name: "Check syntax (php-parallel-lint)"
        run: "./vendor/bin/parallel-lint src tests --colors"

      - name: "Check coding standards (PHP_CodeSniffer)"
        run: "./vendor/bin/phpcs src tests --standard=psr2 -sp --colors"

  code-coverage:
    name: "Code coverage"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install dependencies (apt)"
        run: |
          sudo apt-get update
          sudo apt-get -y install bsdmainutils libsodium-dev uuid-dev
          mkdir -p build/logs

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          extensions: "bcmath, ctype, gmp, sodium, uuid"
          coverage: "pcov"
          ini-values: "memory_limit=-1"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"

      - name: "Run unit tests (PHPUnit)"
        run: "./vendor/bin/phpunit --verbose --colors=always --coverage-text --coverage-clover build/logs/clover.xml"

      - name: "Publish coverage report to Codecov"
        uses: "codecov/codecov-action@v3"

  unit-tests:
    name: "Unit Tests"
    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "5.4"
          - "5.5"
          - "5.6"
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
        include:
          - php-version: "5.4"
            operating-system: "ubuntu-latest"
            extensions: ", libsodium-1.0.7, uuid-1.0.4"
          - php-version: "5.5"
            operating-system: "ubuntu-latest"
            extensions: ", libsodium-1.0.7, uuid-1.0.4"
          - php-version: "5.6"
            operating-system: "ubuntu-latest"
            extensions: ", libsodium-1.0.7, uuid-1.0.4"
          - php-version: "7.0"
            extensions: ", sodium, uuid"
          - php-version: "7.1"
            extensions: ", sodium, uuid"
          - php-version: "7.2"
            extensions: ", sodium, uuid"
          - php-version: "7.3"
            extensions: ", sodium, uuid"
          - php-version: "7.4"
            extensions: ", sodium, uuid"
          - php-version: "8.0"
            extensions: ", sodium, uuid"
          - php-version: "8.1"
            extensions: ", sodium, uuid"
          - php-version: "8.2"
            extensions: ", sodium, uuid"

    steps:
      - name: "Configure Git (for Windows)"
        if: ${{ matrix.operating-system == 'windows-latest' }}
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf

      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install dependencies (apt)"
        if: ${{ matrix.operating-system == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get -y install bsdmainutils libsodium-dev uuid-dev
          mkdir -p build/logs

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "bcmath, ctype, gmp ${{ matrix.extensions }}"
          coverage: "none"
          ini-values: "memory_limit=-1"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "${{ matrix.composer-options }}"

      - name: "Run unit tests (PHPUnit)"
        run: "./vendor/bin/phpunit --verbose --colors=always --no-coverage"
